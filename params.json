{"name":"Offlinecache","body":"##Background                                                                                                \r\nThe modern browser imprements cache assets very well. But sometimes we need to get images with proxy or generate photos from server. So I try to cache images in local to avoid request server again and again.\r\nIt cached in local file system, so the request won't send again if it found the local cache.\r\n\r\n##So, what is it?\r\n* Offline cache image, especially large image from proxy server.\r\n* Offline cache AJAX data, provide user to get ajax data. Speed up the query time and reduce server query\r\n* Development mode. In frontend development, we don't want to spend time in server request. so we can cache it in local in development mode.\r\n\r\n##Demo\r\n[http://blackbing.github.com/offlineCache/demo.html](http://blackbing.github.com/offlineCache/demo.html)\r\n\r\n##Usage\r\n###as a jQuery plugin: \r\nJust require [jquery.offlineCache-min.js](https://github.com/blackbing/offlineCache/blob/master/javascript/jquery.offlineCache-min.js) and\r\n\r\n    //cache AJAX response\r\n    url = 'data/ajax.json'\r\n    //if cache is found, it will return a localfile url\r\n    ajaxJsonURL = $.offlineCache.getURL('data/ajax.json')\r\n    $.get(ajaxJsonURL, (res)->\r\n      #save content manually\r\n      if url is ajaxJsonURL\r\n        $.offlineCache.create(url,\r\n          content:res\r\n          filetype: 'text'\r\n      )\r\n    )\r\n\r\n###as a Handlebar Helper:\r\nJust require [handlebar.offlineCache-min.js](https://github.com/blackbing/offlineCache/blob/master/javascript/handlebar.offlineCache-min.js) and\r\n\r\n####Template Example [(offlineCache.hbs)](https://github.com/blackbing/offlineCache/blob/master/templates/offlineCache.hbs)\r\n\r\n\r\n    {{#each images}}\r\n      <img src=\"{{offlineCache this}}\" >\r\n    {{/each}}\r\n    \r\n\r\n    #Coffeescript\r\n    Coffeescript\r\n    template = Handlebars.compile(offlineCacheTpl)\r\n    html = template(images:imageData)\r\n    \r\n###For more example: please see [main.coffee](https://github.com/blackbing/offlineCache/blob/master/coffee/main.coffee)\r\n\r\n##Limitation\r\n* Chrome only. It use HTML5 File API. The most frustrated thing is it only supported for Chrome. \r\n                         \r\n###Dependency                                                                                                                                                                        \r\n* [jQuery](https://github.com/jquery/jquery)                                                                                                                                                                                                                                                              \r\n* [faultylab.MD5](http://blog.faultylabs.com/?d=md5)\r\n* [RequireJS](http://requirejs.org)\r\n\r\n##Contribute\r\n\r\n###Compile CoffeeScript\r\n\r\n    ./compileScript.sh\r\n\r\n###Run Server\r\nIt need to run on server, you can simply use:\r\n\r\n    ./runSimpleServer.sh\r\n\r\nand open\r\n\r\n    http://localhost:8888\r\n\r\n###Build\r\nBased on [require/r.js](http://requirejs.org/docs/optimization.html)\r\n\r\n    ./build.sh","tagline":"create offline cache HTML5 FileAPI","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}